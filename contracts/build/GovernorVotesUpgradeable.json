{
  "contractName": "GovernorVotesUpgradeable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ProposalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "COUNTING_MODE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        }
      ],
      "name": "castVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "castVoteBySig",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "castVoteWithReason",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes32",
          "name": "descriptionHash",
          "type": "bytes32"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes32",
          "name": "descriptionHash",
          "type": "bytes32"
        }
      ],
      "name": "hashProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalSnapshot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "quorum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum IGovernorUpgradeable.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract ERC20VotesUpgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernorUpgradeable.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20VotesUpgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of {Governor} for voting weight extraction from an {ERC20Votes} token. _Available since v4.3._\",\"kind\":\"dev\",\"methods\":{\"COUNTING_MODE()\":{\"details\":\"A description of the possible `support` values for {castVote} and the way these votes are counted, meant to be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of key-value pairs that each describe one aspect, for example `support=bravo&quorum=for,abstain`. There are 2 standard keys: `support` and `quorum`. - `support=bravo` refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in `GovernorBravo`. - `quorum=bravo` means that only For votes are counted towards quorum. - `quorum=for,abstain` means that both For and Abstain votes are counted towards quorum. NOTE: The string can be decoded by the standard https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams[`URLSearchParams`] JavaScript class.\"},\"castVote(uint256,uint8)\":{\"details\":\"See {IGovernor-castVote}.\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteBySig}.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"details\":\"See {IGovernor-castVoteWithReason}.\"},\"execute(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-execute}.\"},\"hasVoted(uint256,address)\":{\"details\":\"Returns weither `account` has cast a vote on `proposalId`.\"},\"hashProposal(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-hashProposal}. The proposal id is produced by hashing the RLC encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors accross multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.\"},\"name()\":{\"details\":\"See {IGovernor-name}.\"},\"proposalDeadline(uint256)\":{\"details\":\"See {IGovernor-proposalDeadline}.\"},\"proposalSnapshot(uint256)\":{\"details\":\"See {IGovernor-proposalSnapshot}.\"},\"proposalThreshold()\":{\"details\":\"Part of the Governor Bravo's interface: _\\\"The number of votes required in order for a voter to become a proposer\\\"_.\"},\"propose(address[],uint256[],bytes[],string)\":{\"details\":\"See {IGovernor-propose}.\"},\"quorum(uint256)\":{\"details\":\"Minimum number of cast voted required for a proposal to be successful. Note: The `blockNumber` parameter corresponds to the snaphot used for counting vote. This allows to scale the quroum depending on values such as the totalSupply of a token at this block (see {ERC20Votes}).\"},\"state(uint256)\":{\"details\":\"See {IGovernor-state}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"version()\":{\"details\":\"See {IGovernor-version}.\"},\"votingDelay()\":{\"details\":\"Delay, in number of block, between the proposal is created and the vote starts. This can be increassed to leave time for users to buy voting power, of delegate it, before the voting of a proposal starts.\"},\"votingPeriod()\":{\"details\":\"Delay, in number of blocks, between the vote start and vote ends. NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting duration compared to the voting delay.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"COUNTING_MODE()\":{\"notice\":\"module:voting\"},\"getVotes(address,uint256)\":{\"notice\":\"Read the voting weight from the token's built in snapshot mechanism (see {IGovernor-getVotes}).\"},\"hasVoted(uint256,address)\":{\"notice\":\"module:voting\"},\"quorum(uint256)\":{\"notice\":\"module:user-config\"},\"votingDelay()\":{\"notice\":\"module:user-config\"},\"votingPeriod()\":{\"notice\":\"module:user-config\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol\":\"GovernorVotesUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol\":{\"keccak256\":\"0xbcd7dfac8880e8fc4ecffb509d82c187c51734600a11e3bdefba7d8fb41d9ec9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b39483bfccdf7e44401acd9d21aa6b622d19c01711cc4cfd978d52cb4552cc2\",\"dweb:/ipfs/Qmav1vSQckksiX7WRqS6QW2vfqnrno1uoW53ut5ESuqTez\"]},\"/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol\":{\"keccak256\":\"0xf3b0cd639c5aae671a346e35b5e639adad97f34ff11c55b9b6fbab2ffd042cbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://115bb105051d3a2523e23080fe0009e7c3d9c1d978131e48648e34c74ed96f2e\",\"dweb:/ipfs/QmUtPgoyKGrD3MSh1VjnbchiEG8Sz6htpyoeCzqNi8y635\"]},\"/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol\":{\"keccak256\":\"0x568be599407d12941f2cd00455b6dacfb84e5e2240eebe886cfb8fc2344a4845\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa6de6a2a24d512ed54330ced116a45133bad4a4554779213031cfd8c8f287fe\",\"dweb:/ipfs/QmXMGBYwoxJsbk4YuNeXAquWVv2UCDR65iNfaRkAmqqSK7\"]},\"/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x6287586f5e4a103c89d4dda41406136cdf283cc625bd1ebfdf1468aae5bfe449\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30e2e913292e86a9bce50d51882b23ef57ae4c811003ec96cf39b1781f68b202\",\"dweb:/ipfs/QmUXqjyiAHbEMJ4zLfaduWYuVwp1HozqVhtChe9VfdpjoV\"]},\"/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x47852df4456c4b7e2fbda473b1c237f24991d2ceb1c7cba8d90e229bf6add473\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb0411367470219c3994c3401b955531a39852f3ca9434961fc83a72c74ef199\",\"dweb:/ipfs/QmPdnTxHy6kyaXF8ncQ2fwbGjTj9ngCCFDnq1NX2JMBCbn\"]},\"/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]},\"/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol\":{\"keccak256\":\"0x0a74581ffd6b8adfe095337e561f752d2e7e2cfdd518b203111123c0b7bb8cf4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f46785c8606c99d736d88e9a1acc5c1f2c582df577288400eb0aac59fe42099\",\"dweb:/ipfs/QmQwuBwRupJjVPo4c7DTLqSoSYGeLzpd3d5XtxkqBLXUcK\"]},\"/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x0c85e40b29481eadb132cb5eb973d27b4567098f4bc257b250ee540d8d309a00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24a403828551f24407f9d90de2736d3a17bde482fa0790b63c52a00b89897fff\",\"dweb:/ipfs/QmWMGs1FTyywkd42jPqhQeyXa5asgnidaHfxk18aJuwWDP\"]},\"/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xa55d6efdfd8ba20c827041c54d38880020b41984c25bf1f39a27d185841ec283\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a830693a399f6ac2c68c4b05c4560f84e6ea893891b5aa374960627de054ef0\",\"dweb:/ipfs/Qmbm4YBobKxPLXGGpv27tsEsTibKg4FJNjbyMu9m6QSVDU\"]},\"/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xc815dccf75f18fe4df62a7ab38f35398792b38ac66d90325373dd5067c9453b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d3830a0331c57abcaa34109895613ff901cb8ff9e74bafafe99c4bebd9f4df3\",\"dweb:/ipfs/QmcTm8we99damvtKiei2wTgLDTCzFKNT3PVLQ7FgzDFg2C\"]},\"/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]},\"/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]},\"/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x704add6904e5156bac4fb870ee851af4c2d004ae0cac22fd030162843fd1d611\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e1bf4e8ba4cc1bf12029886c17313076a26afc60622ebeb2c740cf692bbcf0\",\"dweb:/ipfs/QmenGgJyUKHoVPNWehvyTEGcpLc74Xutet3FECVmTG8md6\"]},\"/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xed12e1c10c09054954b16a1b1f4250c4bbc0c7140d720777626fb5886a1a0e25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de44624131ca75031b9d8751c42138d5792acb956604dd776c1c7cf1fbd86d26\",\"dweb:/ipfs/QmaUiV9pMt4AeAMxdMnDCsQSwFXLmTAvrQwWBb1bwZBhTu\"]},\"/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/utils/TimersUpgradeable.sol\":{\"keccak256\":\"0x7e5dc525fea80506cb7b796199852954628a55710a8f87066022a8c1d0a70527\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ef75c1beda57afa4fc8a417efee6c71eb5dcc3332d348ab8d0ccebf834bd2f3\",\"dweb:/ipfs/QmPP9Up6rFVUrg8yqCvpanfjnqqZ27CRH5c3Ha5Rj7pPfT\"]},\"/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x17698d23fc4bd8420ec3077f7e621d035d3d73757a709ac12873a34dd4323c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbbd46ccf2b2407b859d6070ff22c970254e9672222ced5658efb3edee13a403\",\"dweb:/ipfs/QmSBdDPp9yfa5ebmtfNqN2XYRzZh1DzG9AtQupUds2Ktkt\"]},\"/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0x0287c745fdf617370bf5dcfe28372b3bde631dc3ab1ce8e8b25a359ba0c91fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a267c80f3f4e90a6035bca16b60467d281192ae3521e43b5321a2ca65cfdd715\",\"dweb:/ipfs/QmRka5bcqxD8REZws3ByAMPzk8mYVD3xGeKXeRHqK9WBCz\"]},\"/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x8c5737e80521ac5e76c0d9d2cdb67647906fdadeb296644910eeecb31042e1da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://029725970d69465cca169353fa146f716e557bd974a0e2356b7791095469788c\",\"dweb:/ipfs/QmQjDRaegdUPcwyyzygnBGm68cdLBQ5BHxHqPi8bGW74GX\"]},\"/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0x650712f855228b7cdeb90738d99dd33ff3a7c9770914ff03eb93f90218fe164b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d61d29cfb52a862da981f6688772dd009132757bcb85e4be8be506db1ed71f9\",\"dweb:/ipfs/QmWWHRKr5aTxyU4TRehnU6toBctgi217toZdth6JqYrh5y\"]},\"/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xb5f53cc3ab24ab6fa25438eb8f5d7eb1c3ba12ee0766e7f8f3b73d6a94d22131\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://952ad1cd2e872ebb95bc950545dac15981ef5edcd58e2dc193384c493c4a514d\",\"dweb:/ipfs/QmYzF7ugT4yfr1Cu6kHFKw5L1oRwxBLJnYA4tyVzRocyAd\"]},\"/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0x735485d9746aca75100c15f46e7933e42a7d25494c5844b723116a3e105f7569\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46a6841c2e2b0f5db7fd75f4532fe3f2faedb44fadd45faef425ca33214418ca\",\"dweb:/ipfs/QmXuof5ZSR7diKkSTzPzf5zwSEvHWWrqEgA5WtPG5m9V1r\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (governance/extensions/GovernorVotes.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../GovernorUpgradeable.sol\";\nimport \"../../token/ERC20/extensions/ERC20VotesUpgradeable.sol\";\nimport \"../../utils/math/MathUpgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {Governor} for voting weight extraction from an {ERC20Votes} token.\n *\n * _Available since v4.3._\n */\nabstract contract GovernorVotesUpgradeable is Initializable, GovernorUpgradeable {\n    ERC20VotesUpgradeable public token;\n\n    function __GovernorVotes_init(ERC20VotesUpgradeable tokenAddress) internal initializer {\n        __Context_init_unchained();\n        __ERC165_init_unchained();\n        __IGovernor_init_unchained();\n        __GovernorVotes_init_unchained(tokenAddress);\n    }\n\n    function __GovernorVotes_init_unchained(ERC20VotesUpgradeable tokenAddress) internal initializer {\n        token = tokenAddress;\n    }\n\n    /**\n     * Read the voting weight from the token's built in snapshot mechanism (see {IGovernor-getVotes}).\n     */\n    function getVotes(address account, uint256 blockNumber) public view virtual override returns (uint256) {\n        return token.getPastVotes(account, blockNumber);\n    }\n    uint256[50] private __gap;\n}\n",
  "sourcePath": "/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol",
  "ast": {
    "absolutePath": "/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        5254
      ],
      "ContextUpgradeable": [
        5298
      ],
      "CountersUpgradeable": [
        5372
      ],
      "ECDSAUpgradeable": [
        6179
      ],
      "EIP712Upgradeable": [
        6328
      ],
      "ERC165Upgradeable": [
        6374
      ],
      "ERC20PermitUpgradeable": [
        4973
      ],
      "ERC20Upgradeable": [
        4014
      ],
      "ERC20VotesUpgradeable": [
        4751
      ],
      "GovernorUpgradeable": [
        1311
      ],
      "GovernorVotesUpgradeable": [
        3329
      ],
      "IERC165Upgradeable": [
        6386
      ],
      "IERC20MetadataUpgradeable": [
        4776
      ],
      "IERC20PermitUpgradeable": [
        5009
      ],
      "IERC20Upgradeable": [
        4092
      ],
      "IGovernorUpgradeable": [
        1569
      ],
      "Initializable": [
        3441
      ],
      "MathUpgradeable": [
        6474
      ],
      "SafeCastUpgradeable": [
        6867
      ],
      "StringsUpgradeable": [
        5575
      ],
      "TimersUpgradeable": [
        5789
      ]
    },
    "id": 3330,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3259,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "108:23:8"
      },
      {
        "absolutePath": "/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol",
        "file": "../GovernorUpgradeable.sol",
        "id": 3260,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3330,
        "sourceUnit": 1312,
        "src": "133:36:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol",
        "file": "../../token/ERC20/extensions/ERC20VotesUpgradeable.sol",
        "id": 3261,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3330,
        "sourceUnit": 4752,
        "src": "170:64:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
        "file": "../../utils/math/MathUpgradeable.sol",
        "id": 3262,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3330,
        "sourceUnit": 6475,
        "src": "235:46:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "../../proxy/utils/Initializable.sol",
        "id": 3263,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3330,
        "sourceUnit": 3442,
        "src": "282:45:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 3265,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3441,
              "src": "502:13:8"
            },
            "id": 3266,
            "nodeType": "InheritanceSpecifier",
            "src": "502:13:8"
          },
          {
            "baseName": {
              "id": 3267,
              "name": "GovernorUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1311,
              "src": "517:19:8"
            },
            "id": 3268,
            "nodeType": "InheritanceSpecifier",
            "src": "517:19:8"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3264,
          "nodeType": "StructuredDocumentation",
          "src": "329:126:8",
          "text": " @dev Extension of {Governor} for voting weight extraction from an {ERC20Votes} token.\n _Available since v4.3._"
        },
        "fullyImplemented": false,
        "id": 3329,
        "linearizedBaseContracts": [
          3329,
          1311,
          1569,
          6328,
          6374,
          6386,
          5298,
          3441
        ],
        "name": "GovernorVotesUpgradeable",
        "nameLocation": "474:24:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 3271,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "572:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 3329,
            "src": "543:34:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20VotesUpgradeable_$4751",
              "typeString": "contract ERC20VotesUpgradeable"
            },
            "typeName": {
              "id": 3270,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3269,
                "name": "ERC20VotesUpgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4751,
                "src": "543:21:8"
              },
              "referencedDeclaration": 4751,
              "src": "543:21:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20VotesUpgradeable_$4751",
                "typeString": "contract ERC20VotesUpgradeable"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3292,
              "nodeType": "Block",
              "src": "671:170:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3279,
                      "name": "__Context_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5275,
                      "src": "681:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "681:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3281,
                  "nodeType": "ExpressionStatement",
                  "src": "681:26:8"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3282,
                      "name": "__ERC165_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6352,
                      "src": "717:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "717:25:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3284,
                  "nodeType": "ExpressionStatement",
                  "src": "717:25:8"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3285,
                      "name": "__IGovernor_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1335,
                      "src": "752:26:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "752:28:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3287,
                  "nodeType": "ExpressionStatement",
                  "src": "752:28:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3289,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3274,
                        "src": "821:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20VotesUpgradeable_$4751",
                          "typeString": "contract ERC20VotesUpgradeable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20VotesUpgradeable_$4751",
                          "typeString": "contract ERC20VotesUpgradeable"
                        }
                      ],
                      "id": 3288,
                      "name": "__GovernorVotes_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3306,
                      "src": "790:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20VotesUpgradeable_$4751_$returns$__$",
                        "typeString": "function (contract ERC20VotesUpgradeable)"
                      }
                    },
                    "id": 3290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "790:44:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3291,
                  "nodeType": "ExpressionStatement",
                  "src": "790:44:8"
                }
              ]
            },
            "id": 3293,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3277,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3276,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3440,
                  "src": "659:11:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "659:11:8"
              }
            ],
            "name": "__GovernorVotes_init",
            "nameLocation": "593:20:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3274,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "636:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3293,
                  "src": "614:34:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20VotesUpgradeable_$4751",
                    "typeString": "contract ERC20VotesUpgradeable"
                  },
                  "typeName": {
                    "id": 3273,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3272,
                      "name": "ERC20VotesUpgradeable",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4751,
                      "src": "614:21:8"
                    },
                    "referencedDeclaration": 4751,
                    "src": "614:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20VotesUpgradeable_$4751",
                      "typeString": "contract ERC20VotesUpgradeable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "613:36:8"
            },
            "returnParameters": {
              "id": 3278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "671:0:8"
            },
            "scope": 3329,
            "src": "584:257:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3305,
              "nodeType": "Block",
              "src": "944:37:8",
              "statements": [
                {
                  "expression": {
                    "id": 3303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3301,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3271,
                      "src": "954:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20VotesUpgradeable_$4751",
                        "typeString": "contract ERC20VotesUpgradeable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3302,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3296,
                      "src": "962:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20VotesUpgradeable_$4751",
                        "typeString": "contract ERC20VotesUpgradeable"
                      }
                    },
                    "src": "954:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20VotesUpgradeable_$4751",
                      "typeString": "contract ERC20VotesUpgradeable"
                    }
                  },
                  "id": 3304,
                  "nodeType": "ExpressionStatement",
                  "src": "954:20:8"
                }
              ]
            },
            "id": 3306,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3299,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3298,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3440,
                  "src": "932:11:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "932:11:8"
              }
            ],
            "name": "__GovernorVotes_init_unchained",
            "nameLocation": "856:30:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3296,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "909:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3306,
                  "src": "887:34:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20VotesUpgradeable_$4751",
                    "typeString": "contract ERC20VotesUpgradeable"
                  },
                  "typeName": {
                    "id": 3295,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3294,
                      "name": "ERC20VotesUpgradeable",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4751,
                      "src": "887:21:8"
                    },
                    "referencedDeclaration": 4751,
                    "src": "887:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20VotesUpgradeable_$4751",
                      "typeString": "contract ERC20VotesUpgradeable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "886:36:8"
            },
            "returnParameters": {
              "id": 3300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "944:0:8"
            },
            "scope": 3329,
            "src": "847:134:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1482
            ],
            "body": {
              "id": 3323,
              "nodeType": "Block",
              "src": "1209:64:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3319,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3309,
                        "src": "1245:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3320,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3311,
                        "src": "1254:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3317,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3271,
                        "src": "1226:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20VotesUpgradeable_$4751",
                          "typeString": "contract ERC20VotesUpgradeable"
                        }
                      },
                      "id": 3318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPastVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4256,
                      "src": "1226:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 3321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1226:40:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3316,
                  "id": 3322,
                  "nodeType": "Return",
                  "src": "1219:47:8"
                }
              ]
            },
            "documentation": {
              "id": 3307,
              "nodeType": "StructuredDocumentation",
              "src": "987:114:8",
              "text": " Read the voting weight from the token's built in snapshot mechanism (see {IGovernor-getVotes})."
            },
            "functionSelector": "eb9019d4",
            "id": 3324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotes",
            "nameLocation": "1115:8:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3313,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1182:8:8"
            },
            "parameters": {
              "id": 3312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3309,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1132:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3324,
                  "src": "1124:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3311,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "1149:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3324,
                  "src": "1141:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1141:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1123:38:8"
            },
            "returnParameters": {
              "id": 3316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3315,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3324,
                  "src": "1200:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1200:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1199:9:8"
            },
            "scope": 3329,
            "src": "1106:167:8",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3328,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "1298:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 3329,
            "src": "1278:25:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 3325,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1278:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 3327,
              "length": {
                "hexValue": "3530",
                "id": 3326,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1286:2:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1278:11:8",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 3330,
        "src": "456:850:8",
        "usedErrors": []
      }
    ],
    "src": "108:1199:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        5254
      ],
      "ContextUpgradeable": [
        5298
      ],
      "CountersUpgradeable": [
        5372
      ],
      "ECDSAUpgradeable": [
        6179
      ],
      "EIP712Upgradeable": [
        6328
      ],
      "ERC165Upgradeable": [
        6374
      ],
      "ERC20PermitUpgradeable": [
        4973
      ],
      "ERC20Upgradeable": [
        4014
      ],
      "ERC20VotesUpgradeable": [
        4751
      ],
      "GovernorUpgradeable": [
        1311
      ],
      "GovernorVotesUpgradeable": [
        3329
      ],
      "IERC165Upgradeable": [
        6386
      ],
      "IERC20MetadataUpgradeable": [
        4776
      ],
      "IERC20PermitUpgradeable": [
        5009
      ],
      "IERC20Upgradeable": [
        4092
      ],
      "IGovernorUpgradeable": [
        1569
      ],
      "Initializable": [
        3441
      ],
      "MathUpgradeable": [
        6474
      ],
      "SafeCastUpgradeable": [
        6867
      ],
      "StringsUpgradeable": [
        5575
      ],
      "TimersUpgradeable": [
        5789
      ]
    },
    "id": 3330,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3259,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "108:23:8"
      },
      {
        "absolutePath": "/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol",
        "file": "../GovernorUpgradeable.sol",
        "id": 3260,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3330,
        "sourceUnit": 1312,
        "src": "133:36:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol",
        "file": "../../token/ERC20/extensions/ERC20VotesUpgradeable.sol",
        "id": 3261,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3330,
        "sourceUnit": 4752,
        "src": "170:64:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
        "file": "../../utils/math/MathUpgradeable.sol",
        "id": 3262,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3330,
        "sourceUnit": 6475,
        "src": "235:46:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matthewrodgers/Desktop/Eudaimonia/githubfiles/contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "../../proxy/utils/Initializable.sol",
        "id": 3263,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3330,
        "sourceUnit": 3442,
        "src": "282:45:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 3265,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3441,
              "src": "502:13:8"
            },
            "id": 3266,
            "nodeType": "InheritanceSpecifier",
            "src": "502:13:8"
          },
          {
            "baseName": {
              "id": 3267,
              "name": "GovernorUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1311,
              "src": "517:19:8"
            },
            "id": 3268,
            "nodeType": "InheritanceSpecifier",
            "src": "517:19:8"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3264,
          "nodeType": "StructuredDocumentation",
          "src": "329:126:8",
          "text": " @dev Extension of {Governor} for voting weight extraction from an {ERC20Votes} token.\n _Available since v4.3._"
        },
        "fullyImplemented": false,
        "id": 3329,
        "linearizedBaseContracts": [
          3329,
          1311,
          1569,
          6328,
          6374,
          6386,
          5298,
          3441
        ],
        "name": "GovernorVotesUpgradeable",
        "nameLocation": "474:24:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 3271,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "572:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 3329,
            "src": "543:34:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20VotesUpgradeable_$4751",
              "typeString": "contract ERC20VotesUpgradeable"
            },
            "typeName": {
              "id": 3270,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3269,
                "name": "ERC20VotesUpgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4751,
                "src": "543:21:8"
              },
              "referencedDeclaration": 4751,
              "src": "543:21:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20VotesUpgradeable_$4751",
                "typeString": "contract ERC20VotesUpgradeable"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3292,
              "nodeType": "Block",
              "src": "671:170:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3279,
                      "name": "__Context_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5275,
                      "src": "681:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "681:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3281,
                  "nodeType": "ExpressionStatement",
                  "src": "681:26:8"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3282,
                      "name": "__ERC165_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6352,
                      "src": "717:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "717:25:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3284,
                  "nodeType": "ExpressionStatement",
                  "src": "717:25:8"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3285,
                      "name": "__IGovernor_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1335,
                      "src": "752:26:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "752:28:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3287,
                  "nodeType": "ExpressionStatement",
                  "src": "752:28:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3289,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3274,
                        "src": "821:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20VotesUpgradeable_$4751",
                          "typeString": "contract ERC20VotesUpgradeable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20VotesUpgradeable_$4751",
                          "typeString": "contract ERC20VotesUpgradeable"
                        }
                      ],
                      "id": 3288,
                      "name": "__GovernorVotes_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3306,
                      "src": "790:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20VotesUpgradeable_$4751_$returns$__$",
                        "typeString": "function (contract ERC20VotesUpgradeable)"
                      }
                    },
                    "id": 3290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "790:44:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3291,
                  "nodeType": "ExpressionStatement",
                  "src": "790:44:8"
                }
              ]
            },
            "id": 3293,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3277,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3276,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3440,
                  "src": "659:11:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "659:11:8"
              }
            ],
            "name": "__GovernorVotes_init",
            "nameLocation": "593:20:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3274,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "636:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3293,
                  "src": "614:34:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20VotesUpgradeable_$4751",
                    "typeString": "contract ERC20VotesUpgradeable"
                  },
                  "typeName": {
                    "id": 3273,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3272,
                      "name": "ERC20VotesUpgradeable",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4751,
                      "src": "614:21:8"
                    },
                    "referencedDeclaration": 4751,
                    "src": "614:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20VotesUpgradeable_$4751",
                      "typeString": "contract ERC20VotesUpgradeable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "613:36:8"
            },
            "returnParameters": {
              "id": 3278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "671:0:8"
            },
            "scope": 3329,
            "src": "584:257:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3305,
              "nodeType": "Block",
              "src": "944:37:8",
              "statements": [
                {
                  "expression": {
                    "id": 3303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3301,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3271,
                      "src": "954:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20VotesUpgradeable_$4751",
                        "typeString": "contract ERC20VotesUpgradeable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3302,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3296,
                      "src": "962:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20VotesUpgradeable_$4751",
                        "typeString": "contract ERC20VotesUpgradeable"
                      }
                    },
                    "src": "954:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20VotesUpgradeable_$4751",
                      "typeString": "contract ERC20VotesUpgradeable"
                    }
                  },
                  "id": 3304,
                  "nodeType": "ExpressionStatement",
                  "src": "954:20:8"
                }
              ]
            },
            "id": 3306,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3299,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3298,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3440,
                  "src": "932:11:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "932:11:8"
              }
            ],
            "name": "__GovernorVotes_init_unchained",
            "nameLocation": "856:30:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3296,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "909:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3306,
                  "src": "887:34:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20VotesUpgradeable_$4751",
                    "typeString": "contract ERC20VotesUpgradeable"
                  },
                  "typeName": {
                    "id": 3295,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3294,
                      "name": "ERC20VotesUpgradeable",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4751,
                      "src": "887:21:8"
                    },
                    "referencedDeclaration": 4751,
                    "src": "887:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20VotesUpgradeable_$4751",
                      "typeString": "contract ERC20VotesUpgradeable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "886:36:8"
            },
            "returnParameters": {
              "id": 3300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "944:0:8"
            },
            "scope": 3329,
            "src": "847:134:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1482
            ],
            "body": {
              "id": 3323,
              "nodeType": "Block",
              "src": "1209:64:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3319,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3309,
                        "src": "1245:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3320,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3311,
                        "src": "1254:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3317,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3271,
                        "src": "1226:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20VotesUpgradeable_$4751",
                          "typeString": "contract ERC20VotesUpgradeable"
                        }
                      },
                      "id": 3318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPastVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4256,
                      "src": "1226:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 3321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1226:40:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3316,
                  "id": 3322,
                  "nodeType": "Return",
                  "src": "1219:47:8"
                }
              ]
            },
            "documentation": {
              "id": 3307,
              "nodeType": "StructuredDocumentation",
              "src": "987:114:8",
              "text": " Read the voting weight from the token's built in snapshot mechanism (see {IGovernor-getVotes})."
            },
            "functionSelector": "eb9019d4",
            "id": 3324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotes",
            "nameLocation": "1115:8:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3313,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1182:8:8"
            },
            "parameters": {
              "id": 3312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3309,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1132:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3324,
                  "src": "1124:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3311,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "1149:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3324,
                  "src": "1141:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1141:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1123:38:8"
            },
            "returnParameters": {
              "id": 3316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3315,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3324,
                  "src": "1200:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1200:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1199:9:8"
            },
            "scope": 3329,
            "src": "1106:167:8",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3328,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "1298:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 3329,
            "src": "1278:25:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 3325,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1278:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 3327,
              "length": {
                "hexValue": "3530",
                "id": 3326,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1286:2:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1278:11:8",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 3330,
        "src": "456:850:8",
        "usedErrors": []
      }
    ],
    "src": "108:1199:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-12-25T03:30:36.938Z",
  "devdoc": {
    "details": "Extension of {Governor} for voting weight extraction from an {ERC20Votes} token. _Available since v4.3._",
    "kind": "dev",
    "methods": {
      "COUNTING_MODE()": {
        "details": "A description of the possible `support` values for {castVote} and the way these votes are counted, meant to be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of key-value pairs that each describe one aspect, for example `support=bravo&quorum=for,abstain`. There are 2 standard keys: `support` and `quorum`. - `support=bravo` refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in `GovernorBravo`. - `quorum=bravo` means that only For votes are counted towards quorum. - `quorum=for,abstain` means that both For and Abstain votes are counted towards quorum. NOTE: The string can be decoded by the standard https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams[`URLSearchParams`] JavaScript class."
      },
      "castVote(uint256,uint8)": {
        "details": "See {IGovernor-castVote}."
      },
      "castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": {
        "details": "See {IGovernor-castVoteBySig}."
      },
      "castVoteWithReason(uint256,uint8,string)": {
        "details": "See {IGovernor-castVoteWithReason}."
      },
      "execute(address[],uint256[],bytes[],bytes32)": {
        "details": "See {IGovernor-execute}."
      },
      "hasVoted(uint256,address)": {
        "details": "Returns weither `account` has cast a vote on `proposalId`."
      },
      "hashProposal(address[],uint256[],bytes[],bytes32)": {
        "details": "See {IGovernor-hashProposal}. The proposal id is produced by hashing the RLC encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors accross multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts."
      },
      "name()": {
        "details": "See {IGovernor-name}."
      },
      "proposalDeadline(uint256)": {
        "details": "See {IGovernor-proposalDeadline}."
      },
      "proposalSnapshot(uint256)": {
        "details": "See {IGovernor-proposalSnapshot}."
      },
      "proposalThreshold()": {
        "details": "Part of the Governor Bravo's interface: _\"The number of votes required in order for a voter to become a proposer\"_."
      },
      "propose(address[],uint256[],bytes[],string)": {
        "details": "See {IGovernor-propose}."
      },
      "quorum(uint256)": {
        "details": "Minimum number of cast voted required for a proposal to be successful. Note: The `blockNumber` parameter corresponds to the snaphot used for counting vote. This allows to scale the quroum depending on values such as the totalSupply of a token at this block (see {ERC20Votes})."
      },
      "state(uint256)": {
        "details": "See {IGovernor-state}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "version()": {
        "details": "See {IGovernor-version}."
      },
      "votingDelay()": {
        "details": "Delay, in number of block, between the proposal is created and the vote starts. This can be increassed to leave time for users to buy voting power, of delegate it, before the voting of a proposal starts."
      },
      "votingPeriod()": {
        "details": "Delay, in number of blocks, between the vote start and vote ends. NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting duration compared to the voting delay."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "COUNTING_MODE()": {
        "notice": "module:voting"
      },
      "getVotes(address,uint256)": {
        "notice": "Read the voting weight from the token's built in snapshot mechanism (see {IGovernor-getVotes})."
      },
      "hasVoted(uint256,address)": {
        "notice": "module:voting"
      },
      "quorum(uint256)": {
        "notice": "module:user-config"
      },
      "votingDelay()": {
        "notice": "module:user-config"
      },
      "votingPeriod()": {
        "notice": "module:user-config"
      }
    },
    "version": 1
  }
}